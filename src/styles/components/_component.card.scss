

// --------------------------------------------------------------------------
//   COMPONENT: CARDS
//   See: https://github.com/IanLunn/Hover
// --------------------------------------------------------------------------


@mixin cardGlow() {
	@include smoothTransition();
	//transition: box-shadow 0.3s ease-in-out;

	&:hover {
		box-shadow: 0 0 space(1.5) palette(black-40);
	}
}

@mixin imageFilter {
	filter: grayscale(100%);
	&:hover {
		filter: grayscale(0);
	}
}

// The Card
.Card {
    @include cardGlow();
    background-image: none;
	border: 1px solid palette(black-20);
    border-radius: $cardRadius;
    display: block;
	margin-bottom: space(0.5);
    position: relative;
    transition: box-shadow 0.3s ease-in-out, border-color 0.3s ease-in-out;

    //&:after {
    //    border-left: 1rem solid transparent;
    //    border-right: 1rem solid transparent;
    //    border-bottom: 1rem solid palette(brand-muted);
    //    content: "";
    //    display: inline-block;
    //    height: 0;
    //    left: 50%;
    //    opacity: 0;
    //    position: absolute;
    //    top: calc(100% + #{2.25rem} );
    //    // transform: translate(-50%, 0);
    //    transition: all map-fetch($transition, duration, short) map-fetch($transition, type, fine);
    //    vertical-align: middle;
    //    width: 0;
    //}
    //
    //&.is-open:after {
    //    opacity: 1;
	//	transform: translate(-50%, 0);
    //}
    
    @include on-event() {
        border-color: palette(brand);
        transition: box-shadow 0.3s ease-in-out, border-color 0.3s ease-in-out;
        
        .Card-title {
            color: palette(brand);
            transition: color 0.3s ease-in-out;
        }
    }

	@include respond-to(xs) {
	    margin-bottom: 0;
	}
}

.Card-image {
	@include coverImage();
	@include imageFilter();
	border-top-left-radius: $cardRadius;
	border-top-right-radius: $cardRadius;
	height: space(4);
	
	&:after {
		background-image: linear-gradient( rgba( palette(text), 0.6 ), rgba( palette(text), 0 ) 50% );
	}

	@include respond-to(xs) {
	    height: space(8);
	}

	&.with-headline {
		@extend .u-flex;
		@extend .u-flexAlignItemsEnd;
		.Card-type { background-color: transparent !important; }
	}

	//> img {
	//	// @include ImageFilter();
	//	border-top-left-radius: $cardRadius;
	//	border-top-right-radius: $cardRadius;
	//}
}

.Card-type {
    background-color: transparent;
    color: palette(white);
	font-family: $font-text-bold;
	font-size: map-fetch($size, font, textSm, xs);
    margin-bottom: 0;
    padding: rem(7) rem(12) rem(6);
    text-align: left;
	text-transform: capitalize;

	@include respond-to(xs) {
	    font-size: map-fetch($size, font, textSm, base);
		padding: rem(7) rem(16) rem(6);
	}
}

.Card-title {
    @include textTemplate(
    	$mixinColor: palette(text),
    	$mixinFont: $font-text-light,
    	$mixinLineHeight: $base-line-height-unit,
        $mixinSize: headline--md
    );
    
	// background-color: rgba( palette(brand), 0.05);
	// background-color: palette(brand-light);
	background-color: palette(white);
	border-bottom-left-radius: $cardRadius;
	border-bottom-right-radius: $cardRadius;
    //color: paleete(black-66);
	//font-family: $font-text-regular;
	//font-size: map-fetch($size, font, headerRg, xs);
	//letter-spacing: -0.005em;
	margin-bottom: 0;
	min-height: rem(85);
    padding: rem(7) rem(16) rem(7) rem(12);
    text-align: left;
    transition: color 0.3s ease-in-out;

    @include respond-to(sm) {
		//font-family: $font-text-light;
		//font-size: map-fetch($size, font, headerMd, base);
        // margin-bottom: space(0.75);
        margin-bottom: 0;
		min-height: rem(125);
		padding: rem(12) rem(24) rem(12) rem(14);
    }
}
