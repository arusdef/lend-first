

// --------------------------------------------------------------------------
//   FOLD COMPONENT
//   Uses data-attributes to toggle w/ JQuery.
//   See: http://toddmotto.com/stop-toggling-classes-with-js-use-behaviour-driven-dom-manipulation-with-data-states/
// --------------------------------------------------------------------------


$fold-bg-color: color(ui, brand-muted);

.Fold {
    perspective-origin: 50% 50%;
    perspective: 800;

    .Container {
        padding: space(2.5) 0;
    }

    .Headline--tertiary {
        &:after { border-color: color(text, medium); }
        span { background-color: $fold-bg-color; }
    }
}

// Toggle trigger
// 1. Hidden in .Fold-toggle until interaction.

.Fold-toggle {
    &.fullWidth {
        display: block;
    }
}

// Toggle target

.Fold-target {
    @include smoothTransition();
    background-color: $fold-bg-color;
    display: block;
    max-height: 0;
    opacity: 0.2;
    overflow: hidden;
    transform: translateY(-7%);
    transition: all map-fetch($transition, duration, short) map-fetch($transition, type, fine);

    p {
        color: color(text, charcoal);
    }
}

/* uncss:ignore */
.Fold-target.is-open {
    margin: space(2) 0;
    max-height: 100%;
    opacity: 1;
    overflow: auto;
    transform: translateY(0);
}

// how should I deal with this type of themeing?
// .Button--close {
.Fold-target--close {
    // right: rem(-70);
    right: -37%;
    top: rem(-60);
}

.Fold-target--close-label {
    color: color(text, medium);
    font-family: $font-sans-book;
    // font-size: size(font, text-xs);
    // font-size: size2(font, textXs, xs);
    font-size: map-fetch($size, font, textXs, xs);
    display: block;
    letter-spacing: 0.02em;
    transform: translateY( space(-1) );

    @include respond-to(xs) {
        // font-size: size2(font, textXs, base);
        font-size: map-fetch($size, font, textXs, base);
    }
}





// When inside 'info-for' page
// --------------------------------------------------------------------------

// .CleanFold {
//     .Card:after {
//         border-color: color(ui, background);
//     }
//
//     .Fold-target {
//         background-color: color(ui, background);
//     }
//
//     .Fold-target.is-open {
//         border-top: 1px solid color(ui, light);
//     }
//
//     .Fold .Headline--tertiary span {
//         background-color: color(ui, background);
//     }
// }
